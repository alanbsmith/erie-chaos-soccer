---
import dayjs from 'dayjs';

interface Props {
  date: string;
  homeTeam: string;
  awayTeam: string;
  homeScore: number | null;
  awayScore: number | null;
  isNextMatch?: boolean;
  status: string;
}

const { date, homeTeam, awayTeam, homeScore, awayScore, status, isNextMatch = false } = Astro.props;

const formattedDate = dayjs(date).format('MMM DD');
const formattedTime = dayjs(date).format('h:mma');

const shouldShowMatchScore =  homeScore !== null && awayScore !== null;
---

<li class={`match${isNextMatch ? ' accent-match' : ''}`}>
  <div class={`match__datetime ${isNextMatch ? ' accent-match__datetime' : ''}`}>
    <div class="match__date">{formattedDate}</div>
    <div class="match__time">{formattedTime}</div>
  </div>
  <div class="match__info">{homeTeam} v {awayTeam}</div>
  <div class="match__score">
    {status === 'cancelled' && '--'}
    {shouldShowMatchScore && `${homeScore} : ${awayScore}`}
  </div>
</li>
<style>
  .match {
    display: flex;
    color: #7a9cc6;
    font-size: 1.125rem;
  }

  /* .match:last-child() {
    margin-bottom: 5rem;
  } */

  .match__datetime {
    color: #7a9cc6;
    flex: 1;
    flex-direction: column;
    gap: 0.25rem;
    padding: 1rem;
    justify-content: center;
    min-width: 6rem;
    align-items: center;
    display: flex;
    border-radius: 0.5rem 0 0 0.5rem;
  }
  
  .match__date {
    font-weight: bold;
    font-size: 1.25rem;    
  }

  .match__time {
    font-size: 1.125rem;
  }

  .match__info {
    display: flex;
    flex: 4;
    padding: 1rem;
    align-items: center;
  }

  .match__score {
    display: flex;
    flex: 1;
    padding: 1rem;
    align-items: center;
    justify-content: center;
    color: #7a9cc6;
  }

  .accent-match {
    background: #1e3a5f;
    border-radius: 0.5rem 0.5rem 0 0;
  }

  .accent-match__datetime {
    color: #fff;
    background-color: #2c5aa0;
    border-radius: 0.5rem 0 0 0;
  }
</style>
